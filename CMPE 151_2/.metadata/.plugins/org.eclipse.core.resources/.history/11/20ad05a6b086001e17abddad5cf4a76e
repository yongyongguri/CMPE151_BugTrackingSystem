package controller;

import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ResourceBundle;

import application.DataBaseConnection;
import application.DataModel;
import application.NewBugData;
import application.NewCommentData;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.cell.PropertyValueFactory;

public class CommentsController implements Initializable {
	public DataModel dataModel = new DataModel();

	@FXML
	private Label isDatabaseConnected;

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		if (dataModel.isDatabaseConnected()) {
			isDatabaseConnected.setText(" ");
			UpdateTable_Comment();
			UpdateTable_Bug();
		} else {
			isDatabaseConnected.setText(" ");
		}
	}

	@FXML
	private TextArea addNewComment;
	@FXML
	private TableView<NewCommentData> Comment_tableView;
	@FXML
	private TableColumn<NewCommentData, String> add_CommentNumber_column;

	@FXML
	private TableColumn<NewCommentData, String> add_CommentDescription_column;
	@FXML
	private TableColumn<NewCommentData, String> add_CommentTime_column;

	@FXML
	private TableView<NewBugData> Bug_tableView;
	
	@FXML
	private TableColumn<NewBugData, String> add_BugID_column;
	
	@FXML
	private TableColumn<NewBugData, String> add_projectName_column;

	@FXML
	private TableColumn<NewBugData, String> add_BugTitle_column;

	@FXML
	private TableColumn<NewBugData, String> add_BugDescription_column;

	ObservableList<NewBugData> listB_LastValue;
	Connection conn = null;
	PreparedStatement pst_Bug = null;

	private ObservableList<NewCommentData> listC;
	Connection connC = null;
	PreparedStatement pst_Comment = null;

	// Add new Comment with its description and current date/time, then update the
	// table
	@FXML
	public void addComment_saveButton() {
		System.out.println(1);
		conn = DataBaseConnection.Connector();
		System.out.println(2);
		String sql = "INSERT INTO Comment_table (Comment_Description, TimeStamp, BugID)" + " VALUES(?,?,?)";
		try {
			System.out.println(3);
			pst_Comment = conn.prepareStatement(sql);
			System.out.println(4);
			pst_Comment.setString(1, addNewComment.getText());
			System.out.println(5);
			pst_Comment.setString(2, LocalDate.now().toString() + " - "
					+ LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")).toString());
			System.out.println(6);
			pst_Comment.setString(3, add_BugID_column.getCellObservableValue(Bug_tableView.getItems().get(0)));
			System.out.println(add_BugID_column.getCellObservableValue(0).getValue());
			pst_Comment.execute();
			pst_Comment.close();

			UpdateTable_Comment();
		} catch (Exception e) {
		}
	}

	/**
	 * Displaying the table of the stored Comments.
	 */
	public void UpdateTable_Comment() {
		add_CommentNumber_column.setCellValueFactory(new PropertyValueFactory<NewCommentData, String>("comments_ID"));
		add_CommentDescription_column
				.setCellValueFactory(new PropertyValueFactory<NewCommentData, String>("commentDescription"));
		add_CommentTime_column.setCellValueFactory(new PropertyValueFactory<NewCommentData, String>("commentDateTime"));

		listC = DataBaseConnection.getDataComment();
		Comment_tableView.setItems(listC);
	}

	/**
	 * Update the table to display the stored Bug - the latest value
	 */
	public void UpdateTable_Bug() {
		add_projectName_column.setCellValueFactory(new PropertyValueFactory<NewBugData, String>("newProjectName"));
		add_BugTitle_column.setCellValueFactory(new PropertyValueFactory<NewBugData, String>("bugTitle"));
		add_BugDescription_column.setCellValueFactory(new PropertyValueFactory<NewBugData, String>("bugDescription"));

		listB_LastValue = DataBaseConnection.getDataBug_lastEntry();
		Bug_tableView1.setItems(listB_LastValue);
	}
}
